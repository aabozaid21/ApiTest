1.1- GET /api/v1/Authors
Test Case: response should be 200 OK
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass

1.2- GET /api/v1/Authors
Test Case: returned Objects inside response contain, id, idBook, firstName, lastName keys.
Expected Result: all returned authors contains id, idBook, firstName, lastName.
Actual Result: all returned authors contains id, idBook, firstName, lastName.
Status: Pass

*******************************************************************************************************
1.1 POST /api/v1/Authors.
Test Case: create Author
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass

2.2- POST /api/v1/Authors.
Test Case: check author name.
Expected Result: name equals name sent in body and declared as collection variable.
Actual Result: name equals name sent in body and declared as collection variable.
Status: Pass

*******************************************************************************************************
3.1- GET /api/v1/Authors/authors/books/{idBook}.
Test Case: response should be 200 OK
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass


3.2- GET /api/v1/Authors/authors/books/{idBook}.
Test Case: check all returned contributors key attributes.
Expected Result: contributors has all specified key attributes.
Actual Result: contributors has all specified key attributes.
Status: Pass

******************************************************************************************************

4.1- GET /api/v1/Authors/{id}.
Test Case: response should be 200 OK
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass

4.2- GET /api/v1/Authors/{id}.
Test Case: check returned author id match the id sent in request. 
Expected Result: id equals id sent in request
Actual Result: id equals id sent in request.
Status: Fail

4.3- GET /api/v1/Authors/{id}.
Test Case: check returned author name.
Expected Result: name conforms with author id.
Actual Result: name conforms with author id.
Status: Pass

*****************************************************************************************************

5.1- PUT /api/v1/Authors/{id}.
Test Case: response should be 200 OK
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass

5.2- PUT /api/v1/Authors/{id}.
Test Case: check updated author id and book id. 
Expected Result: id and book id equals id and book id sent in body.
Actual Result: id and book id equals id and book id sent in body.
Status: Pass

5.3- PUT /api/v1/Authors/{id}.
Test Case: check updated author name.
Expected Result: name equals name sent in body.
Actual Result: name equals name sent in body.
Status: Pass

*****************************************************************************************************

6.1- DELETE /api/v1/Authors/{id}.
Test Case: response should be 200 OK
Expected Result: 200 OK
Actual Result: 200 OK
Status: Pass

6.2- DELETE /api/v1/Authors/{id}.
Test Case: check deleted author id and book id. 
Expected Result: id and book id equals id and book id sent in request
Actual Result: id and book id equals id and book id sent in request
Status: Pass


6.3- DELETE /api/v1/Authors/{id}.
Test Case: check deletd author name. 
Expected Result: name equals name sent in request.
Actual Result: name equals name sent in request.
Status: Pass

6.4- DELETE /api/v1/Authors/{id}.
Test Case: check response body. 
Expected Result: return {_value:null}.
Actual Result: return {_value:null}.
Status: Pass
