{
	"info": {
		"_postman_id": "fe709370-dfe0-4505-84a2-807c9f24172d",
		"name": "FakeRESTApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21546319"
	},
	"item": [
		{
			"name": "AllAuthors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Object are valid\",function(){\r",
							"\r",
							"    for(var i = 0; i< jsonData.length ; i++  ){\r",
							"        pm.expect(jsonData[i]).to.have.property('id')\r",
							"\t\tpm.expect(jsonData[i]).to.have.property('idBook');\r",
							"\t    pm.expect(jsonData[i]).to.have.property('firstName');\r",
							"\t\tpm.expect(jsonData[i]).to.have.property('lastName');\r",
							"    }\t\t\t\t\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddAuthor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create Author \", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"check author name\", function () {\r",
							"    let first = pm.collectionVariables.get(\"firstName\");\r",
							"    let last = pm.collectionVariables.get(\"lastName\");\r",
							"\r",
							"    pm.expect(jsonData.firstName).to.eql(first);\r",
							"    pm.expect(jsonData.lastName).to.eql(last);\r",
							"\t\t\t\t\t\t\t  \r",
							" });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json; v=1.0",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1001,\r\n  \"idBook\": 2001,\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}api/v1/Authors",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookAuthors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"contributors returned successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check all returned contributors key attribute\", function () {\r",
							"      for(var i = 0; i< jsonData.length ; i++  ){\r",
							"                pm.expect(jsonData[i]).to.have.property('id');              \r",
							"                 pm.expect(jsonData[i]).to.have.property('idBook');\r",
							"                pm.expect(jsonData[i]).to.have.property('firstName');\r",
							"                pm.expect(jsonData[i]).to.have.property('lastName');\r",
							"      }\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}api/v1/Authors/authors/books/{{IdBook}}",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"v1",
						"Authors",
						"authors",
						"books",
						"{{IdBook}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAuthor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"author returned successfully successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check author id & idBook\", function () {\r",
							"     let id = parseInt(pm.collectionVariables.get(\"authorID\"));\r",
							"     let idBook = parseInt(pm.collectionVariables.get(\"idBook\"));\r",
							"     pm.expect(jsonData.id).to.eql(id);\r",
							"     pm.expect(jsonData.idBook).to.eql(idBook);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{authorID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{authorID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"author updated successfully successfully\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"check update author id & idBook\", function () {\r",
							"    let id = parseInt(pm.collectionVariables.get(\"actAuthorID\"));\r",
							"   // console.log(id);\r",
							"    let idBook = parseInt(pm.collectionVariables.get(\"actAuthorBookID\"));\r",
							"    pm.expect(jsonData.id).to.eql(100);\r",
							"    pm.expect(jsonData.idBook).to.eql(100);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"check updated author name\", function () {\r",
							"\r",
							" pm.expect(jsonData.firstName).to.eql(\"Alaa\");\r",
							"pm.expect(jsonData.lastName).to.eql(\"Abozaid\");\r",
							"});\r",
							"                       "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{actAuthorID}},\r\n  \"idBook\": {{actAuthorBookID}},\r\n  \"firstName\": \"Alaa\",\r\n  \"lastName\": \"Abozaid\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}api/v1/Authors/{{authorID}}",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"v1",
						"Authors",
						"{{authorID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteAuthor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"author deleted successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"pm.globals.set(\"jsonData\", \"pm.response()\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstName",
			"value": "Alaa",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "Abozaid",
			"type": "string"
		},
		{
			"key": "IdBook",
			"value": "100",
			"type": "string"
		},
		{
			"key": "authorID",
			"value": "100"
		},
		{
			"key": "actAuthorID",
			"value": "100",
			"type": "string"
		},
		{
			"key": "actAuthorBookID",
			"value": "100\n",
			"type": "string"
		},
		{
			"key": "id",
			"value": "10",
			"type": "string"
		}
	]
}